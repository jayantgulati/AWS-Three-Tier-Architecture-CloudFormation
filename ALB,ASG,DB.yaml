
Resources:
  
  MyEFS:
    Type: AWS::EFS::FileSystem
    
  EFSMount1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref MyEFS
      SecurityGroups:
        - '{{resolve:ssm:/parameters/stacks/security-groups/EFS/id}}'
      SubnetId: '{{resolve:ssm:/parameters/stacks/private-subnet-1/id}}'
      
  EFSMount2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref MyEFS
      SecurityGroups:
        - '{{resolve:ssm:/parameters/stacks/security-groups/EFS/id}}'
      SubnetId: '{{resolve:ssm:/parameters/stacks/private-subnet-2/id}}'


  Ec2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.nano
      ImageId: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
      Tags:
        - Value: EFS Testing
          Key: Name
      KeyName: pub 
      NetworkInterfaces: 
        - AssociatePublicIpAddress: True
          DeviceIndex: 0
          SubnetId: 
            '{{resolve:ssm:/parameters/stacks/public-subnet-1/id}}'
          DeleteOnTermination: True
          GroupSet:
            - '{{resolve:ssm:/parameters/stacks/security-groups/web-server/id}}'
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo su
            yum update -y
            mkdir -p /var/www/html
            sudo mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${MyEFS}.efs.ap-south-1.amazonaws.com:/ /var/www/html     
            sudo yum install -y httpd httpd-tools mod_ssl
            sudo systemctl enable httpd 
            sudo amazon-linux-extras enable php7.4
            sudo yum clean metadata
            sudo yum install php php-common php-pear -y
            sudo yum install php-{cgi,curl,mbstring,gd,mysqlnd,gettext,json,xml,fpm,intl,zip} -y          
            sudo rpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
            sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
            sudo yum install mysql-community-server -y
            sudo systemctl enable mysqld
            sudo systemctl start mysqld
            sudo usermod -a -G apache ec2-user
            sudo chown -R ec2-user:apache /var/www
            sudo chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;
            sudo find /var/www -type f -exec sudo chmod 0664 {} \;
            chown apache:apache -R /var/www/html 
            wget https://wordpress.org/latest.tar.gz
            tar -xzf latest.tar.gz
            cp -r wordpress/* /var/www/html/
            cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php 
            service httpd restart
  
  
  MYALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Name: ALB-Target-Group
      Port: 80
      Protocol: HTTP
      VpcId: '{{resolve:ssm:/parameters/stacks/VPC/id}}'

  
  
  MYALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: My-Application-Load-Balancer
      SecurityGroups:
        - '{{resolve:ssm:/parameters/stacks/security-groups/ALB/id}}'
      Subnets:
        - '{{resolve:ssm:/parameters/stacks/public-subnet-1/id}}'
        - '{{resolve:ssm:/parameters/stacks/public-subnet-2/id}}'
      Type: application


  ALBListener:
    DependsOn: MYALB
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MYALBTargetGroup 
      LoadBalancerArn: !Ref MYALB
      Port: 80 
      Protocol: HTTP

  ALBSSM:
    Type: AWS::SSM::Parameter
    DependsOn: MYALB
    Properties:
      Name: /parameters/stacks/ALB/id
      Type: String
      Value: !GetAtt MYALB.DNSName


  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${AWS::StackName}-launch-template-for-auto-scaling'
      LaunchTemplateData:
        SecurityGroupIds:
          - '{{resolve:ssm:/parameters/stacks/security-groups/web-server/id}}'
        InstanceType: t2.nano
        ImageId: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
        KeyName: pub
        UserData:
          Fn::Base64: 
           !Sub |          
             #!/bin/bash
             yum update -y
             sudo yum install -y httpd httpd-tools mod_ssl
             sudo systemctl enable httpd 
             sudo systemctl start httpd
             sudo amazon-linux-extras enable php7.4
             sudo yum clean metadata
             sudo yum install php php-common php-pear -y
             sudo yum install php-{cgi,curl,mbstring,gd,mysqlnd,gettext,json,xml,fpm,intl,zip} -y
             sudo rpm -Uvh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
             sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
             sudo yum install mysql-community-server -y
             sudo systemctl enable mysqld
             sudo systemctl start mysqld
             echo "${MyEFS}.efs.ap-south-1.amazonaws.com:/ /var/www/html nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
             mount -a
             service httpd restart 

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup 
    DependsOn: MYALBTargetGroup 
    Properties:
      AutoScalingGroupName: MyASG
      MaxSize: 3
      MinSize: 1
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: 1
      VPCZoneIdentifier:
        - '{{resolve:ssm:/parameters/stacks/private-subnet-1/id}}'
        - '{{resolve:ssm:/parameters/stacks/private-subnet-2/id}}'
      TargetGroupARNs:
        - !Ref MYALBTargetGroup



  CloudFrontDistribution: 
    DependsOn: ALBSSM
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt MYALB.DNSName
            Id: application-load-balancer
            CustomOriginConfig:
                OriginProtocolPolicy : http-only
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          DefaultTTL: 86400 
          MaxTTL: 31536000
          MinTTL: 0
          SmoothStreaming: false
          TargetOriginId: application-load-balancer
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
        HttpVersion: http2
        Enabled: true
        PriceClass: PriceClass_All
        ViewerCertificate:
          CloudFrontDefaultCertificate: true       


      





  
 